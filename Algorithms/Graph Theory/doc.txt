read on g4g:

intro, dfs, bfs:
1.graph and representation
2.bfs
3.dfs
4.application of dfs
5.application of bfs
10. iterative dfs (use built in stack of cpp)

cycle:
(both methods based on dfs)
1. detect in directed graph
3. detect in undirected graph

topological sorting:
(what is topological sorting and why used?)
1. method based on dfs

shotest path:
()
1.Dijkstra's
2.Dijkstra's on adj list representation


bipartite graph: slight modification in bfs
http://www.geeksforgeeks.org/bipartite-graph/ 


practice questions:
bfs:
	question: https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/practice-problems/algorithm/monk-and-the-islands/
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/MonkAndIsland_bsf.cpp

	question: https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/practice-problems/algorithm/oliver-and-the-battle-1/description/
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/OliverAndBattle.cpp

	question: https://www.hackerrank.com/challenges/connected-cell-in-a-grid/problem
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/ConnectedCellsInGrid.cpp

	question: https://www.hackerrank.com/challenges/knightl-on-chessboard
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/KnightLonChessboard.cpp


dfs: 

	question: https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/practice-problems/algorithm/feasible-relations/description/
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/FeasibleRelation.cpp

topological sorting:
	question: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=1246
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/Ordering_topological_sort.cpp

bipartite check:
	question: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=945
	solution: https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/Bicoloring.cpp

shortest path (notice that bfs can be used as well, as in Monk and Island)



general (misc):
Q. https://www.hackerearth.com/practice/algorithms/graphs/graph-representation/practice-problems/algorithm/monk-at-the-graph-factory/
S. https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/MonkAtGraphFactory.cpp 


Q. https://www.hackerearth.com/practice/algorithms/graphs/graph-representation/practice-problems/algorithm/monk-in-the-real-estate/
S. https://github.com/rajanwaliya/HackerRank/blob/master/Algorithms/Graph%20Theory/MonkInRealEstate.cpp